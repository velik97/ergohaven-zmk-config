#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        kha {
            bindings = <&kp LBKT>;
            key-positions = <6 7>;
        };

        hrdsgn {
            bindings = <&kp RBKT>;
            key-positions = <7 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
  &kp Q          &kp W         &kp E        &kp R     &kp T                          &kp Y  &kp U     &kp I            &kp O           &kp P
  &kp A          &kp S         &kp D        &kp F     &kp G                          &kp H  &kp J     &kp K            &kp L           &kp SEMI
  &hmr LSHIFT Z  &hmr LCTRL X  &hmr LALT C  &kp V     &kp B                          &kp N  &kp M     &hmr RALT COMMA  &hmr RCTRL DOT  &hmr RSHIFT SQT
                                            &kp LGUI  &mo 2  &kp SPACE    &kp ENTER  &mo 1  &kp RGUI
            >;

            display-name = "Base";
        };

        nav {
            bindings = <
  &kp N1      &kp N2     &kp N3    &kp N4    &kp N5                        &kp N6           &kp N7         &kp N8    &kp N9     &kp N0
  &none       &kp HOME   &kp INS   &kp END   &kp ENTER                     &kp PRINTSCREEN  &kp PAGE_DOWN  &kp UP    &kp PG_UP  &none
  &kp LSHIFT  &kp LCTRL  &kp LALT  &kp END   &kp DELETE                    &kp CAPS         &kp LEFT       &kp DOWN  &kp RIGHT  &kp RSHIFT
                                   &kp LGUI  &mo 3       &trans    &trans  &trans           &kp RGUI
            >;

            display-name = "Navigation";
        };

        sym {
            bindings = <
  &kp ESC           &kp LT           &kp EQUAL        &kp GT    &kp GRAVE                    &kp CARET  &kp LBKT        &kp UNDER        &kp RBKT         &kp BACKSPACE
  &kp TAB           &kp LPAR         &kp MINUS        &kp RPAR  &kp PLUS                     &kp PRCNT  &hmr RGUI LBRC  &hmr RALT SEMI   &hmr RCTRL RBRC  &kp ENTER
  &hmr LSHIFT HASH  &hmr LCTRL STAR  &hmr LALT COLON  &kp FSLH  &kp BSLH                     &none      &kp PIPE        &hmr RALT TILDE  &hmr RCTRL AMPS  &hmr RSHIFT DLLR
                                                      &kp LGUI  &trans     &trans    &trans  &mo 3      &kp RGUI
            >;

            display-name = "Symbols";
        };

        adj {
            bindings = <
  &bootloader  &kp F1         &kp F2         &kp F3    &kp F4                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3       &none
  &none        &kp F5         &kp F6         &kp F7    &kp F8                         &out OUT_BLE  &kp C_VOL_DN  &kp C_MUTE      &kp C_VOLUME_UP    &studio_unlock
  &kp LSHIFT   &hmr LCTRL F9  &hmr LALT F10  &kp F11   &kp F12                        &out OUT_USB  &kp C_PREV    &hmr RALT C_PP  &hmr RCTRL C_NEXT  &kp RSHIFT
                                             &kp LGUI  &trans   &trans    &bt BT_CLR  &trans        &kp RGUI
            >;
        };
    };
};
